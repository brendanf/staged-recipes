{% set version = '0.3.1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-greta
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/greta_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/greta/greta_{{ version }}.tar.gz
  sha256: 0277d0c104a8405155105dd60750d373c597638c947542b2c911c9dc5230c173

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-r6
    - r-coda
    - r-future
    - r-progress >=1.2.0
    - r-reticulate
    - r-tensorflow >=1.13.0
    - python >=2.7.0
    - tensorflow =1.14.0
    - tensorflow-probability =0.7.0
  run:
    - r-base
    - r-r6
    - r-coda
    - r-future
    - r-progress >=1.2.0
    - r-reticulate
    - r-tensorflow >=1.13.0
    - python >=2.7.0
    - tensorflow =1.14.0
    - tensorflow-probability =0.7.0

test:
  commands:
    - $PYTHON -c "import tensorflow; import tensorflow_probability"         #[not win]
    - "\"%PYTHON%\" -c \"import tensorflow; import tensorflow_probability"  #[win]
    - $R -e "library('greta'); as_data(1:10)"           # [not win]
    - "\"%R%\" -e \"library('greta'); as_data(1:10)\""  # [win]

about:
  home: https://greta-stats.org
  license: Apache-2.0
  license_file:
    - LICENSE
    - LICENSE-2.0.txt
  summary: "Write statistical models in R and fit them by MCMC and optimisation on CPUs and GPUs,
    using Google 'TensorFlow'. greta lets you write your own model like in BUGS, JAGS
    and Stan, except that you write models right in R, it scales well to massive datasets,
    and it\u2019s easy to extend and build on. See the website for more information,
    including tutorials, examples, package documentation, and the greta forum."
  license_family: APACHE

extra:
  recipe-maintainers:
    - conda-forge/r
    - brendanf

# Package: greta
# Type: Package
# Title: Simple and Scalable Statistical Modelling in R
# Version: 0.3.1
# Date: 2019-08-08
# Authors@R: c( person("Nick", "Golding", role = c("aut", "cre"), email = "nick.golding.research@gmail.com", comment = c(ORCID = "0000-0001-8916-5570")), person("Simon", "Dirmeier", role = "ctb"), person("Adam", "Fleischhacker", role = "ctb"), person("Shirin", "Glander", role = "ctb"), person("Martin", "Ingram", role = "ctb"), person("Lee", "Hazel", role = "ctb"), person("Tiphaine", "Martin", role = "ctb"), person("Matt", "Mulvahill", role = "ctb"), person("Michael", "Quinn", role = "ctb"), person("David", "Smith", role = "ctb"), person("Paul", "Teetor", role = "ctb"), person("Jian", "Yen", role = "ctb") )
# Description: Write statistical models in R and fit them by MCMC and optimisation on CPUs and GPUs, using Google 'TensorFlow'. greta lets you write your own model like in BUGS, JAGS and Stan, except that you write models right in R, it scales well to massive datasets, and its easy to extend and build on. See the website for more information, including tutorials, examples, package documentation, and the greta forum.
# License: Apache License 2.0
# URL: https://greta-stats.org
# BugReports: https://github.com/greta-dev/greta/issues
# SystemRequirements: Python (>= 2.7.0) with header files and shared library; TensorFlow (v1.14; https://www.tensorflow.org/); TensorFlow Probability (v0.7.0; https://www.tensorflow.org/probability/)
# Encoding: UTF-8
# LazyData: true
# Depends: R (>= 3.0)
# Collate: 'package.R' 'utils.R' 'tf_functions.R' 'overloaded.R' 'node_class.R' 'node_types.R' 'variable.R' 'probability_distributions.R' 'mixture.R' 'joint.R' 'unknowns_class.R' 'greta_array_class.R' 'as_data.R' 'distribution.R' 'operators.R' 'functions.R' 'transforms.R' 'structures.R' 'extract_replace_combine.R' 'dag_class.R' 'greta_model_class.R' 'progress_bar.R' 'inference_class.R' 'samplers.R' 'optimisers.R' 'inference.R' 'install_tensorflow.R' 'internals.R' 'calculate.R' 'callbacks.R'
# Imports: R6, tensorflow (>= 1.13.0), reticulate, progress (>= 1.2.0), future, coda, methods
# Suggests: knitr, rmarkdown, DiagrammeR, bayesplot, lattice, testthat, mvtnorm, MCMCpack, rmutil, extraDistr, truncdist, tidyverse, fields, MASS, abind, spelling
# VignetteBuilder: knitr
# RoxygenNote: 6.1.1
# Language: en-GB
# NeedsCompilation: no
# Packaged: 2019-08-09 02:38:06 UTC; nick
# Author: Nick Golding [aut, cre] (<https://orcid.org/0000-0001-8916-5570>), Simon Dirmeier [ctb], Adam Fleischhacker [ctb], Shirin Glander [ctb], Martin Ingram [ctb], Lee Hazel [ctb], Tiphaine Martin [ctb], Matt Mulvahill [ctb], Michael Quinn [ctb], David Smith [ctb], Paul Teetor [ctb], Jian Yen [ctb]
# Maintainer: Nick Golding <nick.golding.research@gmail.com>
# Repository: CRAN
# Date/Publication: 2019-08-09 04:40:03 UTC
